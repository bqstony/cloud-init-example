#cloud-config
# author: Michael
# cloud-config based on repo template: https://github.com/Azure/iotedge-vm-deploy/tree/1.2.0
# see: https://docs.microsoft.com/en-us/azure/virtual-machines/linux/tutorial-automate-vm-deployment
# use genoneline.py for arm-template customData part
apt:
  preserve_sources_list: true
  sources:
    msft.list:
      # source: "deb https://packages.microsoft.com/ubuntu/18.04/multiarch/prod bionic main"
      source: "deb https://packages.microsoft.com/ubuntu/20.04/prod focal main"
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----
        Version: GnuPG v1.4.7 (GNU/Linux)

        mQENBFYxWIwBCADAKoZhZlJxGNGWzqV+1OG1xiQeoowKhssGAKvd+buXCGISZJwT
        LXZqIcIiLP7pqdcZWtE9bSc7yBY2MalDp9Liu0KekywQ6VVX1T72NPf5Ev6x6DLV
        7aVWsCzUAF+eb7DC9fPuFLEdxmOEYoPjzrQ7cCnSV4JQxAqhU4T6OjbvRazGl3ag
        OeizPXmRljMtUUttHQZnRhtlzkmwIrUivbfFPD+fEoHJ1+uIdfOzZX8/oKHKLe2j
        H632kvsNzJFlROVvGLYAk2WRcLu+RjjggixhwiB+Mu/A8Tf4V6b+YppS44q8EvVr
        M+QvY7LNSOffSO6Slsy9oisGTdfE39nC7pVRABEBAAG0N01pY3Jvc29mdCAoUmVs
        ZWFzZSBzaWduaW5nKSA8Z3Bnc2VjdXJpdHlAbWljcm9zb2Z0LmNvbT6JATUEEwEC
        AB8FAlYxWIwCGwMGCwkIBwMCBBUCCAMDFgIBAh4BAheAAAoJEOs+lK2+EinPGpsH
        /32vKy29Hg51H9dfFJMx0/a/F+5vKeCeVqimvyTM04C+XENNuSbYZ3eRPHGHFLqe
        MNGxsfb7C7ZxEeW7J/vSzRgHxm7ZvESisUYRFq2sgkJ+HFERNrqfci45bdhmrUsy
        7SWw9ybxdFOkuQoyKD3tBmiGfONQMlBaOMWdAsic965rvJsd5zYaZZFI1UwTkFXV
        KJt3bp3Ngn1vEYXwijGTa+FXz6GLHueJwF0I7ug34DgUkAFvAs8Hacr2DRYxL5RJ
        XdNgj4Jd2/g6T9InmWT0hASljur+dJnzNiNCkbn9KbX7J/qK1IbR8y560yRmFsU+
        NdCFTW7wY0Fb1fWJ+/KTsC4=
        =J6gs
        -----END PGP PUBLIC KEY BLOCK----- 
packages:
  - moby-cli
  - moby-engine
write_files:
  - path: /etc/docker/daemon.json
    content: |
      {
          "log-driver": "json-file",
          "log-opts": {
              "max-size": "10m",
              "max-file": "100"
          },
          "default-address-pools": [
            {
              "base": "192.168.100.0/24",
              "size": 27
            }
          ]
      }
  - path: /etc/aziot/config.toml
    content: |
      # Provisioning configuration
      # --------------------------
      ## Manual provisioning with connection string
      #
      [provisioning]
      source = "manual"
      connection_string = 

      # ==============================================================================
      # Default Edge Agent
      # ==============================================================================
      #
      [agent]
      name = "edgeAgent"
      type = "docker"
      
      [agent.config]
      image = "mcr.microsoft.com/azureiotedge-agent:1.3"
runcmd:
  # ARM Template injection for variable assignment
  - dcs="', variables('dcs'),'"
  - |
      set -x
      (
        echo "Device connection string: $dcs"

        # Wait for docker daemon to start
        while [ $(ps -ef | grep -v grep | grep docker | wc -l) -le 0 ]; do 
          sleep 3
        done

        apt install -y aziot-edge=1.3.0-1
        echo "done aziot-edge"

        if [ ! -z $dcs ]; then
          # the file /etc/aziot/config.toml should already exist. Now set the connectionstring
          sed -i "s#\(connection_string = \).*#\1\"$dcs\"#g" /etc/aziot/config.toml
          iotedge config apply -c /etc/aziot/config.toml
        fi

        echo "enable Swap Management (requires restart!)"
        sed -i "s/GRUB_CMDLINE_LINUX=\"\"/GRUB_CMDLINE_LINUX=\"cgroup_enable=memory swapaccount=1\"/" /etc/default/grub
        mkdir /etc/default/grub.d        
        sed -i "s/GRUB_CMDLINE_LINUX_DEFAULT=\"\"/GRUB_CMDLINE_LINUX_DEFAULT=\"console=ttyS0 group_enable=memory swapaccount=1\"/" /etc/default/grub.d/50-cloudimg-settings.cfg
        update-grub
      ) &
# Capture all subprocess output into a logfile. Useful for troubleshooting cloud-init issues
output: { all: "| tee -a /var/log/cloud-init-output.log" }
# Perform a reboot once cloud-init has completed.
power_state:
  delay: 1
  mode: reboot
  message: Rebooting machine
